#!/bin/bash
  
  update_word="true"
  update_excel="true"
  update_powerpoint="true"
  update_outlook="true"
  update_onenote="true"
  update_companyportal="true"
  
  path_word="/Applications/Microsoft Word.app"
  path_excel="/Applications/Microsoft Excel.app"
  path_powerpoint="/Applications/Microsoft PowerPoint.app"
  path_outlook="/Applications/Microsoft Outlook.app"
  path_onenote="/Applications/Microsoft OneNote.app"
  path_companyportal="/Applications/Company Portal.app"
  
  function check_mau_install() {
    if [ ! -e "/Library/Application Support/Microsoft/MAU2.0/Microsoft AutoUpdate.app/Contents/MacOS/msupdate" ]; then
      echo "==> MAU 3.18 or later is required!" && exit 1
    fi
  }
  
  function check_app_install() {
    
    if [ ! -e "${path_word}" ]; then
      update_word="false"
    fi
    
    if [ ! -e "${path_excel}" ]; then
      update_excel="false"
    fi
    
    if [ ! -e "${path_powerpoint}" ]; then
      update_powerpoint="false"
    fi
    
    if [ ! -e "${path_outlook}" ]; then
      update_outlook="false"
    fi
    
    if [ ! -e "${path_onenote}" ]; then
      update_onenote="false"
    fi
    
    if [ ! -e "${path_companyportal}" ]; then
      update_companyportal="false"
    fi
    
  }
  
  function determine_login_state() {
    
    currentuser=$(/usr/local/bin/currentuser)
    
    if [ -z "${currentuser}" ]; then
      echo "==> No user logged in"
      cmd_prefix=""
    else
      echo "==> User '${currentuser}' is logged in"
      cmd_prefix="sudo -u ${currentuser} "
    fi
    
  }
  
  function register_app() {
    $(${cmd_prefix}/usr/bin/defaults write com.microsoft.autoupdate2 Applications -dict-add "${1}" "{ 'Application ID' = '${2}'; LCID = 1033 ; }")
  }
  
  function perform_update() {
    ${cmd_prefix}"/Library/Application Support/Microsoft/MAU2.0/Microsoft AutoUpdate.app/Contents/MacOS/msupdate" --install --apps "${1}" "${2}" --wait 600
  }
  
  check_mau_install
  
  check_app_install
  
  determine_login_state
  
  echo "==> Register 'Microsoft AutoUpdate.app' (MSau03)..."
  register_app "${path_word}" "MSau03"
  
  if [ "${update_word}" == "true" ]; then
    echo "==> Update 'Microsoft Word.app' (MSWD2019)..."
    register_app "${path_word}" "MSWD2019"
    perform_update "MSWD2019" "latest"
  else
    echo "==> 'Microsoft Word.app' (MSWD2019) is not installed"
  fi
  
  if [ "${update_excel}" == "true" ]; then
    echo "==> Update 'Microsoft Excel.app' (XCEL2019)..."
    register_app "${path_excel}" "XCEL2019"
    perform_update "XCEL2019" "latest"
  else
    echo "==> 'Microsoft Excel.app' (XCEL2019) is not installed"
  fi
  
  if [ "${update_powerpoint}" == "true" ]; then
    echo "==> Update 'Microsoft PowerPoint.app' (PPT32019)..."
    register_app "${path_powerpoint}" "PPT32019"
    perform_update "PPT32019" "latest"
  else
    echo "==> 'Microsoft PowerPoint.app' (PPT32019) is not installed"
  fi
  
  if [ "${update_outlook}" == "true" ]; then
    echo "==> Update 'Microsoft Outlook.app' (OPIM2019)..."
    register_app "${path_outlook}" "OPIM2019"
    perform_update "OPIM2019" "latest"
  else
    echo "==> 'Microsoft Outlook.app' (OPIM2019) is not installed"
  fi
  
  if [ "${update_onenote}" == "true" ]; then
    echo "==> Update 'Microsoft OneNote.app' (ONMC2019)..."
    register_app "${path_onenote}" "ONMC2019"
    perform_update "ONMC2019" "latest"
  else
    echo "==> 'Microsoft OneNote.app' (ONMC2019) is not installed"
  fi
  
  if [ "${update_companyportal}" == "true" ]; then
    echo "==> Update 'Company Portal.app' (IMCP01)..."
    register_app "${path_companyportal}" "IMCP01"
    perform_update "IMCP01" "latest"
  else
    echo "==> 'Company Portal.app' (IMCP01) is not installed"
  fi
