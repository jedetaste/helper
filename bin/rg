#!/bin/bash

prog_name=$(basename "${0}")
prog_version="3.4"

start_application() {

  echo "${prog_name} v${prog_version}"
  echo "Welcome to the recipe generator for aky!"
  echo "Your recipe will be saved on the desktop. Do not run this applications as root."
  echo

  set_recipe

}

yes_no() {

  yes_no=""
  read -r yno
  case "${yno}" in

  [yY] | [yY][Ee][Ss])
    yes_no="yes"
    ;;

  [nN] | [nN][Oo])
    yes_no="no"
    ;;

  *) echo "Invalid input" ;;

  esac

}

set_recipe() {

  read -rp "Type in machine friendly name for the recipe (e.g. firefox): " recipe

  set_bundle

}

set_bundle() {

  read -rp "Type in application name: " bundle

  set_identifier

}

set_identifier() {

  read -rp "Type in bundle identifier: " identifier

  if [ -z "${identifier}" ]; then
    identifier="null"
  fi

  set_download

}

set_download() {

  read -rp "Type in download URL: " download

  set_checksum

}

set_checksum() {

  read -rp "Type in SHA256 checksum: " sha256

  if [ -z "${sha256}" ]; then
    sha256="null"
  fi

  set_version

}

set_version() {

  read -rp "Type in the current version: " version

  if [ -z "${version}" ]; then
    version="null"
  fi

  set_build

}

set_build() {

  read -rp "Type in the current build: " build

  if [ -z "${build}" ]; then
    build="null"
  fi

  set_directory

}

set_directory() {

  read -rp "Where should the application be saved (e.g. /Applications)?: " dir

  set_symlink

}

set_symlink() {

  read -rp "Type in the symlink path. Press enter if none: " symlink

  if [ -z "${symlink}" ]; then
    symlink="null"
  fi

  set_web

}

set_web() {

  read -rp "Type in the website (e.g. https://www.mozilla.org/firefox/): " web

  if [ -z "${web}" ]; then
    web="null"
  fi

  recipe_preview

}

recipe_preview() {

  echo
  echo "ID: ${recipe}"
  echo "Bundle: ${bundle}.app"
  echo "Identifier: ${identifier}"
  echo "Download: ${download}"
  echo "Checksum: ${sha256}"
  echo "Version: ${version}"
  echo "Build: ${build}"
  echo "Directory: ${dir}/${bundle}.app"
  echo "Symlink: ${symlink}"
  echo "Website: ${web}"
  echo
  echo "Recipe Ok? [yes/no]"
  echo

  yes_no

  if [ "${yes_no}" == "yes" ]; then
    write_recipe
  else
    clear
    start_application
  fi

}

write_recipe() {

  current_user=$(scutil <<<"show State:/Users/ConsoleUser" | awk '/Name :/ && ! /loginwindow/ { print $3 }')

  json="/Users/${current_user}/Desktop/${recipe}.json" && rm -f "${json}" && touch "${json}"

  cat >>"${json}" <<EOF
{
  "recipe": {
    "id": "${recipe}",
    "bundle": "${bundle//.app/}.app",
EOF

  if [ "${identifier}" != "null" ]; then
    cat >>"${json}" <<EOF
    "identifier": "${identifier}",
EOF
  else
    cat >>"${json}" <<EOF
    "identifier": null,
EOF
  fi

  cat >>"${json}" <<EOF
    "download": "${download}",
EOF

  if [ "${sha256}" != "null" ]; then
    cat >>"${json}" <<EOF
    "sha256": "${sha256}",
EOF
  else
    cat >>"${json}" <<EOF
    "sha256": null,
EOF
  fi

  cat >>"${json}" <<EOF
    "appcast": {
      "url": null,
      "checkpoint": null
    },
EOF

  if [ "${version}" != "null" ]; then
    cat >>"${json}" <<EOF
    "version": "${version}",
EOF
  else
    cat >>"${json}" <<EOF
    "version": null,
EOF
  fi

  if [ "${build}" != "null" ]; then
    cat >>"${json}" <<EOF
    "build": "${build}",
EOF
  else
    cat >>"${json}" <<EOF
    "build": null,
EOF
  fi

  cat >>"${json}" <<EOF
    "dir": "${dir}",
EOF

  if [ "${symlink}" != "null" ]; then
    cat >>"${json}" <<EOF
    "symlink": "${symlink}",
EOF
  else
    cat >>"${json}" <<EOF
    "symlink": null,
EOF
  fi

  if [ "${web}" != "null" ]; then
    cat >>"${json}" <<EOF
    "web": "${web}"
EOF
  else
    cat >>"${json}" <<EOF
    "web": null
EOF
  fi

  cat >>"${json}" <<EOF
  }
}
EOF

  echo
  echo "The recipe was saved on your desktop as '${recipe}.json'"
  echo

  open -R "/Users/${current_user}/Desktop/${recipe}.json"

}

clear
start_application
