#!/bin/bash

prog_name=$(basename "${0}")
prog_version="3.5"

start_application() {

  echo "${prog_name} v${prog_version}"
  echo "Welcome to the recipe generator for aky!"
  echo "Your recipe will be saved on the desktop. Do not run this applications as root."
  echo

  set_recipe

}

yes_no() {

  yes_no=""
  read -r yno
  case "${yno}" in

  [yY] | [yY][Ee][Ss])
    yes_no="yes"
    ;;

  [nN] | [nN][Oo])
    yes_no="no"
    ;;

  *) echo "Invalid input" ;;

  esac

}

set_recipe() {

  read -rp "Type in machine friendly name for the recipe (e.g. firefox): " recipe

  set_bundle

}

set_bundle() {

  read -rp "Type in application name (e.g. Firefox.app): " bundle

  set_identifier

}

set_identifier() {

  read -rp "Type in bundle identifier: " identifier

  if [ -z "${identifier}" ]; then
    identifier="null"
  fi

  set_download

}

set_download() {

  read -rp "Type in download URL: " download

  set_checksum

}

set_checksum() {

  read -rp "Type in SHA256 checksum: " sha256

  if [ -z "${sha256}" ]; then
    sha256="null"
  fi

  set_version

}

set_version() {

  read -rp "Type in the current version: " version

  if [ -z "${version}" ]; then
    version="null"
  fi

  set_directory

}

set_directory() {

  read -rp "Where should the application be saved (e.g. /Applications)?: " dir

  set_symlink

}

set_symlink() {

  read -rp "Type in the symlink path. Press enter if none: " symlink

  if [ -z "${symlink}" ]; then
    symlink="null"
  fi

  set_web

}

set_web() {

  read -rp "Type in the website (e.g. https://www.mozilla.org/firefox/): " web

  if [ -z "${web}" ]; then
    web="null"
  fi

  recipe_preview

}

recipe_preview() {

  echo "Preview:"
  echo
  echo "id: ${recipe}"
  echo "bundle: ${bundle}.app"
  echo "identifier: ${identifier}"
  echo "download: ${download}"
  echo "sha256: ${sha256}"
  echo "version: ${version}"
  echo "dir: ${dir}/${bundle//.app/}.app"
  echo "symlink: ${symlink}"
  echo "web: ${web}"
  echo
  echo "Ok? [yes/no]"
  echo

  yes_no

  if [ "${yes_no}" = "yes" ]; then
    write_recipe
  else
    clear
    start_application
  fi

}

write_recipe() {

  recipe_path="${HOME}/Desktop/${recipe}.json" && echo "{}" >"${recipe_path}"

  jq --sort-keys --arg id "${recipe}" '.recipe.id = $id' "${recipe_path}" | sponge "${recipe_path}"

  jq --sort-keys --arg bundle "${bundle//.app/}.app" '.recipe.bundle = $bundle' "${recipe_path}" | sponge "${recipe_path}"

  if [ ! "${identifier}" = "null" ]; then
    jq --sort-keys --arg identifier "${identifier}" '.recipe.identifier = $identifier' "${recipe_path}" | sponge "${recipe_path}"
  else
    jq --sort-keys '.recipe.identifier = null' "${recipe_path}" | sponge "${recipe_path}"
  fi

  jq --sort-keys --arg download "${download}" '.recipe.download = $download' "${recipe_path}" | sponge "${recipe_path}"

  if [ ! "${sha256}" = "null" ]; then
    jq --sort-keys --arg sha256 "${sha256}" '.recipe.sha256 = $sha256' "${recipe_path}" | sponge "${recipe_path}"
  else
    jq --sort-keys '.recipe.sha256 = null' "${recipe_path}" | sponge "${recipe_path}"
  fi

  jq --sort-keys '.recipe.processes = []' "${recipe_path}" | sponge "${recipe_path}"

  jq --sort-keys '.recipe.appcast.url = null' "${recipe_path}" | sponge "${recipe_path}"

  jq --sort-keys '.recipe.appcast.checkpoint = null' "${recipe_path}" | sponge "${recipe_path}"

  if [ ! "${version}" = "null" ]; then
    jq --sort-keys --arg version "${version}" '.recipe.version = $version' "${recipe_path}" | sponge "${recipe_path}"
  else
    jq --sort-keys '.recipe.version = null' "${recipe_path}" | sponge "${recipe_path}"
  fi

  if [ ! "${symlink}" = "null" ]; then
    jq --sort-keys --arg symlink "${symlink}" '.recipe.symlink = $symlink' "${recipe_path}" | sponge "${recipe_path}"
  else
    jq --sort-keys '.recipe.symlink = null' "${recipe_path}" | sponge "${recipe_path}"
  fi

  if [ ! "${web}" = "null" ]; then
    jq --sort-keys --arg web "${web}" '.recipe.web = $web' "${recipe_path}" | sponge "${recipe_path}"
  else
    jq --sort-keys '.recipe.web = null' "${recipe_path}" | sponge "${recipe_path}"
  fi

  echo
  echo "The recipe was saved on your desktop as '${recipe}.json'"
  echo

  open -R "${recipe_path}"

}

clear
start_application
